[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform mat2 rot = mat2(vec2(.5, -.64), vec2(.5, .64));
uniform float speed = 1.0;

uniform float overall_intensity : hint_range(0,1) = .5;

uniform vec4 col_red : hint_color = vec4(.8,.1,.1,1.0);
uniform vec4 col_green : hint_color = vec4(.1,.8,.1,1.0);
uniform vec4 col_blue : hint_color = vec4(.1,.1,.8,1.0);

uniform float int_red : hint_range(0,1) = .3;
uniform float int_green : hint_range(0,1) = .3;
uniform float int_blue : hint_range(0,1) = .3;

vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}


void fragment(){
	vec2 st = FRAGCOORD.xy/SCREEN_PIXEL_SIZE.xy;

    // Scale the coordinate system to see
    // some noise in action
    vec2 pos = UV.xy*rot*2.0+TIME*speed;

    // Use the noise function
    vec4 color = col_red * int_red * noise(cos(pos)*1.3 + sin(pos)*.7);
    color += col_green * int_green * noise(cos(pos)*0.3 + sin(pos)*1.7);
    color += col_blue * int_blue * noise(cos(pos) + sin(pos));
    COLOR = color* overall_intensity + texture(TEXTURE, UV)*(1.0-overall_intensity);
}"

[resource]
shader = SubResource( 1 )
shader_param/rot = Transform2D( 0.5, 0.5, 0.2, 0.5, 0, 0 )
shader_param/speed = 0.5
shader_param/overall_intensity = 0.254
shader_param/col_red = Color( 1, 0.00392157, 0.00392157, 1 )
shader_param/col_green = Color( 0.1, 0.8, 0.1, 1 )
shader_param/col_blue = Color( 0.1, 0.1, 0.8, 1 )
shader_param/int_red = 0.768
shader_param/int_green = 0.937
shader_param/int_blue = 0.768
